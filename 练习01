from manimlib.imports import *
import os
import pyclbr

class work(Scene):
    def construct(self):
        
        # pointer = CurvedArrow(2*RIGHT,5*RIGHT,color=BLUE)
        square = Square(side_length=3*2**(1/2),fill_color=BLUE,fill_opacity=0.5,color=BLUE)
        square1 = Square(side_length=13**(1/2),color=BLUE)
        square2 = Square(side_length=5,color=BLUE,fill_color=BLUE,fill_opacity=0.5)
        a= Polygon(np.array([-2,0,0]),np.array([3,0,0]),np.array([0,3,0]),color=YELLOW,fiil_color=YELLOW,fill_opacity=0.5)
        b= Polygon(np.array([-2,0,0]),np.array([-5,2,0]),np.array([-3,5,0]),np.array([0,3,0]),fill_color=BLUE,fill_opacity=0.5,color=BLUE)
        self.play(ShowCreation(a))
        self.play(ShowCreation(b))
        # self.add(pointer)
        square.rotate(-TAU/8),square.shift(3*RIGHT),square.shift(3*UP)
        square2.shift(0.5*RIGHT),square2.shift(2.5*DOWN)
        self.play(FadeIn(square)),self.play(FadeIn(square2))
        self.wait(5)
        s1=Polygon(np.array([-5,2,0]),np.array([-2,-5,0]),np.array([-2,0,0]),fill_color=RED,fill_opacity=0.1)
        s2=Polygon(np.array([3,-5,0]),np.array([3,0,0]),np.array([6,3,0]),fill_color=RED,fill_opacity=0.1)
        s3=Polygon(np.array([0,3,0]),np.array([-3,5,0]),np.array([3,6,0]),fill_color=RED,fill_opacity=0.1)
        # s1.fill_color
        self.play(FadeIn(s1))
        self.play(FadeIn(s2))
        self.play(FadeIn(s3))
        t1=TextMobject("S1",color=GREEN)
        t1.shift(1*DOWN),t1.shift(3*LEFT)
        self.add(t1)
        t2=TextMobject("S2",color=GREEN)
        t2.shift((2/3)*DOWN),t2.shift(-4*LEFT)
        self.add(t2)
        t3=TextMobject("S3",color=GREEN)
        t3.shift((-14/3)*DOWN),t3.shift(0*LEFT)
        self.add(t3)        
        self.play(FadeOut(square))
        self.play(FadeOut(square2))
        self.play(FadeOut(b))
        G1=VGroup(t1,s1)
        G2=VGroup(t2,s2)
        G3=VGroup(t3,s3)
        self.play(Rotating(G1,radians=PI/2,run_time=1,axis=OUT,about_point=np.array([-2,0,0])),rate_func=linear)
        self.play(Rotating(G2,radians=PI/2,run_time=1,axis=OUT,about_point=np.array([3,0,0])),rate_func=linear)
        self.play(Rotating(G3,radians=PI/2,run_time=1,axis=OUT,about_point=np.array([0,3,0])),rate_func=linear)
        t4=TextMobject("a")
        t41=TextMobject("a")
        t41.shift(0.2*DOWN)
        t4.shift(5*RIGHT),t4.shift(0.2*DOWN)
        t5=TextMobject("b")
        t51=TextMobject("b")
        t5.shift(1*LEFT),t5.shift(1*UP)
        t51.shift(3*LEFT),t51.shift(2*DOWN)
        t6=TextMobject("c")
        t61=TextMobject("c")
        t6.shift(-1.5*LEFT),t6.shift(1*UP)
        t61.shift(1.5*LEFT),t61.shift(-4*DOWN)
        t5.set_color(YELLOW)
        t51.set_color(YELLOW)
        t6.set_color(YELLOW)
        t61.set_color(YELLOW)
        t4.set_color(YELLOW)
        t41.set_color(YELLOW)
        self.play(FadeIn(t4))
        self.play(FadeIn(t41))
        self.play(FadeIn(t5))
        self.play(FadeIn(t51))
        self.play(FadeIn(t6))
        self.play(FadeIn(t61))
        t3=TextMobject("结论：S1=S2=S3")
        t3.set_color(RED)
        t3.scale(2)
        t3.shift(6*DOWN)
        self.add(t3)
        self.wait(5)
